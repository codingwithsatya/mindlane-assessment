{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TemperatureComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.weatherData.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Temperature: \", ctx_r0.weatherData.main.temp, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Humidity: \", ctx_r0.weatherData.main.humidity, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Weather: \", ctx_r0.weatherData.weather[0].description, \"\");\n  }\n}\nexport class TemperatureComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n  }\n  ngOnInit() {}\n  fetchTemperature() {\n    this.weatherService.getTemperature(this.city).subscribe(data => {\n      this.weatherData = data;\n      console.log(data);\n    });\n  }\n}\nTemperatureComponent.ɵfac = function TemperatureComponent_Factory(t) {\n  return new (t || TemperatureComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nTemperatureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TemperatureComponent,\n  selectors: [[\"app-temperature\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"container\"], [\"type\", \"text\", \"name\", \"city\", \"placeholder\", \"Enter a city name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function TemperatureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\")(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TemperatureComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function TemperatureComponent_Template_button_click_3_listener() {\n        return ctx.fetchTemperature();\n      });\n      i0.ɵɵtext(4, \"Get Temperature\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, TemperatureComponent_div_5_Template, 9, 4, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  \\n\\n  align-items: center;\\n  justify-content: center;\\n  \\n\\n  text-align: center;\\n  \\n\\n}\\n\\n.weather-info[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  border: 1px solid #ccc;\\n  padding: 10px;\\n  border-radius: 5px;\\n  background-color: #f7f7f7;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVtcGVyYXR1cmUvdGVtcGVyYXR1cmUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYiw0QkFBNEI7RUFDNUIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgLyogZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgKi9cbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC8qIGhlaWdodDogMTAwdmg7ICovXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogYmx1ZXZpb2xldDsgKi9cbn1cblxuLndlYXRoZXItaW5mbyB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","weatherData","name","ɵɵtextInterpolate1","main","temp","humidity","weather","description","TemperatureComponent","constructor","weatherService","ngOnInit","fetchTemperature","getTemperature","city","subscribe","data","console","log","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","TemperatureComponent_Template","rf","ctx","ɵɵlistener","TemperatureComponent_Template_input_ngModelChange_2_listener","$event","TemperatureComponent_Template_button_click_3_listener","ɵɵtemplate","TemperatureComponent_div_5_Template","ɵɵproperty"],"sources":["/Users/satyapramodr/Desktop/github/weather-app/src/app/temperature/temperature.component.ts","/Users/satyapramodr/Desktop/github/weather-app/src/app/temperature/temperature.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-temperature',\n  templateUrl: './temperature.component.html',\n  styleUrls: ['./temperature.component.css'],\n})\nexport class TemperatureComponent implements OnInit {\n  city!: string;\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  ngOnInit(): void {}\n\n  fetchTemperature() {\n    this.weatherService.getTemperature(this.city).subscribe((data) => {\n      this.weatherData = data;\n      console.log(data);\n    });\n  }\n}\n","<div class=\"container\">\n    \n    <form>\n        <input type=\"text\" name=\"city\" [(ngModel)]=\"city\" placeholder=\"Enter a city name\">\n        <button type=\"button\" (click)=\"fetchTemperature()\">Get Temperature</button>\n    </form>\n\n    <div *ngIf=\"weatherData\">\n        <h2>{{ weatherData.name }}</h2>\n        <p>Temperature: {{ weatherData.main.temp }}</p>\n        <p>Humidity: {{ weatherData.main.humidity }}</p>\n        <p>Weather: {{ weatherData.weather[0].description }}</p>\n    </div>\n</div>"],"mappings":";;;;;;ICOIA,EAAA,CAAAC,cAAA,UAAyB;IACjBD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC/BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAwC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC/CH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAyC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAChDH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAiD;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAHpDH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,WAAA,CAAAC,IAAA,CAAsB;IACvBR,EAAA,CAAAI,SAAA,GAAwC;IAAxCJ,EAAA,CAAAS,kBAAA,kBAAAH,MAAA,CAAAC,WAAA,CAAAG,IAAA,CAAAC,IAAA,KAAwC;IACxCX,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAS,kBAAA,eAAAH,MAAA,CAAAC,WAAA,CAAAG,IAAA,CAAAE,QAAA,KAAyC;IACzCZ,EAAA,CAAAI,SAAA,GAAiD;IAAjDJ,EAAA,CAAAS,kBAAA,cAAAH,MAAA,CAAAC,WAAA,CAAAM,OAAA,IAAAC,WAAA,KAAiD;;;ADH5D,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAErDC,QAAQA,CAAA,GAAU;EAElBC,gBAAgBA,CAAA;IACd,IAAI,CAACF,cAAc,CAACG,cAAc,CAAC,IAAI,CAACC,IAAI,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC/D,IAAI,CAAChB,WAAW,GAAGgB,IAAI;MACvBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;;AAbWR,oBAAoB,C;mBAApBA,oBAAoB,EAAAf,EAAA,CAAA0B,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAApBb,oBAAoB,C;QAApBA,oBAAoB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRjCnC,EAAA,CAAAC,cAAA,aAAuB;MAGgBD,EAAA,CAAAqC,UAAA,2BAAAC,6DAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAf,IAAA,GAAAkB,MAAA;MAAA,EAAkB;MAAjDvC,EAAA,CAAAG,YAAA,EAAkF;MAClFH,EAAA,CAAAC,cAAA,gBAAmD;MAA7BD,EAAA,CAAAqC,UAAA,mBAAAG,sDAAA;QAAA,OAASJ,GAAA,CAAAjB,gBAAA,EAAkB;MAAA,EAAC;MAACnB,EAAA,CAAAE,MAAA,sBAAe;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAG/EH,EAAA,CAAAyC,UAAA,IAAAC,mCAAA,iBAKM;MACV1C,EAAA,CAAAG,YAAA,EAAM;;;MAViCH,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAA2C,UAAA,YAAAP,GAAA,CAAAf,IAAA,CAAkB;MAI/CrB,EAAA,CAAAI,SAAA,GAAiB;MAAjBJ,EAAA,CAAA2C,UAAA,SAAAP,GAAA,CAAA7B,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}