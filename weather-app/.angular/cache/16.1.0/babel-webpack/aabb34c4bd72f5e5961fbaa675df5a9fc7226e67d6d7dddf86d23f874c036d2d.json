{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TemperatureComponent_div_5_li_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"weather\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const weather_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Temperature: \", weather_r4.main == null ? null : weather_r4.main.temp, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Humidity: \", weather_r4.main == null ? null : weather_r4.main.humidity, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Weather: \", weather_r4.description, \"\");\n  }\n}\nfunction TemperatureComponent_div_5_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TemperatureComponent_div_5_li_4_div_3_Template, 9, 3, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weatherData_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weatherData_r2[0].name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", weatherData_r2.weather);\n  }\n}\nfunction TemperatureComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Weather Data\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, TemperatureComponent_div_5_li_4_Template, 4, 2, \"li\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.weatherDataList);\n  }\n}\nexport class TemperatureComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.city = '';\n    this.weatherDataList = [];\n  }\n  fetchTemperature() {\n    this.weatherService.getTemperature(this.city).subscribe(response => {\n      console.log(typeof response); // Log the response to inspect its structure\n      this.weatherDataList.push(response);\n    });\n  }\n}\nTemperatureComponent.ɵfac = function TemperatureComponent_Factory(t) {\n  return new (t || TemperatureComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nTemperatureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TemperatureComponent,\n  selectors: [[\"app-temperature\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"container\"], [\"type\", \"text\", \"name\", \"city\", \"placeholder\", \"Enter a city name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TemperatureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\")(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TemperatureComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function TemperatureComponent_Template_button_click_3_listener() {\n        return ctx.fetchTemperature();\n      });\n      i0.ɵɵtext(4, \"Get Temperature\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, TemperatureComponent_div_5_Template, 5, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherDataList.length > 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100vh;\\n  text-align: center;\\n} \\n\\n.weather-info[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  border: 1px solid #ccc;\\n  padding: 10px;\\n  border-radius: 5px;\\n  background-color: #7b9ac5;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVtcGVyYXR1cmUvdGVtcGVyYXR1cmUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSBcblxuLndlYXRoZXItaW5mbyB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdiOWFjNTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","weather_r4","main","temp","humidity","description","ɵɵtemplate","TemperatureComponent_div_5_li_4_div_3_Template","ɵɵtextInterpolate","weatherData_r2","name","ɵɵproperty","weather","TemperatureComponent_div_5_li_4_Template","ctx_r0","weatherDataList","TemperatureComponent","constructor","weatherService","city","fetchTemperature","getTemperature","subscribe","response","console","log","push","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","TemperatureComponent_Template","rf","ctx","ɵɵlistener","TemperatureComponent_Template_input_ngModelChange_2_listener","$event","TemperatureComponent_Template_button_click_3_listener","TemperatureComponent_div_5_Template","length"],"sources":["/Users/satyapramodr/Desktop/github/weather-app/src/app/temperature/temperature.component.ts","/Users/satyapramodr/Desktop/github/weather-app/src/app/temperature/temperature.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-temperature',\n  templateUrl: './temperature.component.html',\n  styleUrls: ['./temperature.component.css'],\n})\nexport class TemperatureComponent {\n  city: string = '';\n  weatherDataList: any[] = [];\n\n  constructor(private weatherService: WeatherService) {}\n\n  fetchTemperature(): void {\n    this.weatherService.getTemperature(this.city).subscribe((response) => {\n      console.log(typeof response); // Log the response to inspect its structure\n      this.weatherDataList.push(response);\n    });\n  }\n}\n","<div class=\"container\">\n  <form>\n    <input type=\"text\" name=\"city\" [(ngModel)]=\"city\" placeholder=\"Enter a city name\">\n    <button type=\"button\" (click)=\"fetchTemperature()\">Get Temperature</button>\n  </form>\n\n  <div *ngIf=\"weatherDataList.length > 0\">\n    <h2>Weather Data</h2>\n    <ul>\n      <li *ngFor=\"let weatherData of weatherDataList\">\n        <h3>{{ weatherData[0].name }}</h3>\n        <div *ngFor=\"let weather of weatherData.weather\">\n            <p>weather</p>\n          <p>Temperature: {{ weather.main?.temp }}</p>\n          <p>Humidity: {{ weather.main?.humidity }}</p>\n          <p>Weather: {{ weather.description }}</p>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}